---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/doctors":
    get:
      summary: List doctors
      tags:
      - Doctors
      responses:
        '200':
          description: successful
    post:
      summary: Create a doctor
      tags:
      - Doctors
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                age:
                  type: integer
                city_id:
                  type: integer
                user_id:
                  type: integer
                description:
                  type: string
                image_url:
                  type: string
                detail_attributes:
                  type: object
                  properties:
                    price:
                      type: integer
                    specialization:
                      type: string
                    studies:
                      type: string
              required:
              - name
              - age
              - city_id
              - user_id
              - description
              - image_url
              - detail_attributes
              - price
              - specialization
              - studies
  "/doctors/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show a doctor information
      tags:
      - Doctors
      responses:
        '200':
          description: successful
    delete:
      summary: Delete a doctor
      tags:
      - Doctors
      responses:
        '200':
          description: successful
  "/reservations":
    get:
      summary: List all reservations
      tags:
      - Reservations
      responses:
        '200':
          description: successful
    post:
      summary: Create a reservation
      tags:
      - Reservations
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                doctor_id:
                  type: integer
                schedule_date:
                  type: string
                  format: datetime
              required:
              - user_id
              - doctor_id
              - schedule_date
  "/reservations/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show a reservation
      tags:
      - Reservations
      responses:
        '200':
          description: successful
    delete:
      summary: Delete a reservation
      tags:
      - Reservations
      responses:
        '200':
          description: successful
  "/signup":
    post:
      summary: Create a new user
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    name:
                      type: string
                    email:
                      type: string
                      format: email
                    password:
                      type: string
                      format: password
                    password_confirmation:
                      type: string
                      format: password
              required:
              - name
              - email
              - password
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:4000/
